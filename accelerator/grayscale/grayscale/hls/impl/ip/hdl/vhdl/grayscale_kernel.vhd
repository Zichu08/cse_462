-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity grayscale_kernel is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    input_stream_TVALID : IN STD_LOGIC;
    input_stream_TREADY : OUT STD_LOGIC;
    input_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    input_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    input_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    output_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_stream_TVALID : OUT STD_LOGIC;
    output_stream_TREADY : IN STD_LOGIC;
    output_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of grayscale_kernel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "grayscale_kernel_grayscale_kernel,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2161,HLS_SYN_LUT=3553,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal width : STD_LOGIC_VECTOR (31 downto 0);
    signal width_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal width_0_vld_reg : STD_LOGIC := '0';
    signal width_0_ack_out : STD_LOGIC;
    signal height : STD_LOGIC_VECTOR (31 downto 0);
    signal height_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal height_0_vld_reg : STD_LOGIC := '0';
    signal height_0_ack_out : STD_LOGIC;
    signal height_read_reg_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal width_read_reg_163 : STD_LOGIC_VECTOR (31 downto 0);
    signal smax_fu_118_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax_reg_169 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax1_fu_132_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax1_reg_174 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sub_fu_148_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_189 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sub22_fu_153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub22_reg_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln12_reg_199 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start : STD_LOGIC;
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_done : STD_LOGIC;
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_idle : STD_LOGIC;
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_ready : STD_LOGIC;
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TREADY : STD_LOGIC;
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_input_stream_TREADY : STD_LOGIC;
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID : STD_LOGIC;
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm_state5 : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal output_stream_TDATA_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal output_stream_TKEEP_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal output_stream_TSTRB_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal output_stream_TLAST_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_100_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_100_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_fu_112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln12_1_fu_108_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_17_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln12_fu_104_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal regslice_both_output_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal regslice_both_input_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal input_stream_TVALID_int_regslice : STD_LOGIC;
    signal input_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_input_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_input_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal output_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal output_stream_TVALID_int_regslice : STD_LOGIC;
    signal output_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal output_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_output_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal output_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_output_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal output_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_output_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal grp_fu_100_p00 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_100_p10 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component grayscale_kernel_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_stream_TVALID : IN STD_LOGIC;
        output_stream_TREADY : IN STD_LOGIC;
        mul_ln12 : IN STD_LOGIC_VECTOR (61 downto 0);
        width : IN STD_LOGIC_VECTOR (31 downto 0);
        sub : IN STD_LOGIC_VECTOR (31 downto 0);
        input_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        input_stream_TREADY : OUT STD_LOGIC;
        input_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        input_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        input_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        sub22 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_stream_TVALID : OUT STD_LOGIC;
        output_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component grayscale_kernel_mul_31ns_31ns_62_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component grayscale_kernel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        width : OUT STD_LOGIC_VECTOR (31 downto 0);
        height : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component grayscale_kernel_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76 : component grayscale_kernel_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start,
        ap_done => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_done,
        ap_idle => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_idle,
        ap_ready => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_ready,
        input_stream_TVALID => input_stream_TVALID_int_regslice,
        output_stream_TREADY => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TREADY,
        mul_ln12 => mul_ln12_reg_199,
        width => width_read_reg_163,
        sub => sub_reg_189,
        input_stream_TDATA => input_stream_TDATA_int_regslice,
        input_stream_TREADY => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_input_stream_TREADY,
        input_stream_TKEEP => input_stream_TKEEP_int_regslice,
        input_stream_TSTRB => input_stream_TSTRB_int_regslice,
        input_stream_TLAST => input_stream_TLAST_int_regslice,
        sub22 => sub22_reg_194,
        output_stream_TDATA => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TDATA,
        output_stream_TVALID => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID,
        output_stream_TKEEP => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TKEEP,
        output_stream_TSTRB => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TSTRB,
        output_stream_TLAST => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TLAST);

    control_s_axi_U : component grayscale_kernel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        width => width,
        height => height,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mul_31ns_31ns_62_2_1_U24 : component grayscale_kernel_mul_31ns_31ns_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_100_p0,
        din1 => grp_fu_100_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_100_p2);

    regslice_both_input_stream_V_data_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TDATA,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_data_V_U_ack_in,
        data_out => input_stream_TDATA_int_regslice,
        vld_out => input_stream_TVALID_int_regslice,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_data_V_U_apdone_blk);

    regslice_both_input_stream_V_keep_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TKEEP,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_keep_V_U_ack_in,
        data_out => input_stream_TKEEP_int_regslice,
        vld_out => regslice_both_input_stream_V_keep_V_U_vld_out,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_keep_V_U_apdone_blk);

    regslice_both_input_stream_V_strb_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TSTRB,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_strb_V_U_ack_in,
        data_out => input_stream_TSTRB_int_regslice,
        vld_out => regslice_both_input_stream_V_strb_V_U_vld_out,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_strb_V_U_apdone_blk);

    regslice_both_input_stream_V_last_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TLAST,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_last_V_U_ack_in,
        data_out => input_stream_TLAST_int_regslice,
        vld_out => regslice_both_input_stream_V_last_V_U_vld_out,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_last_V_U_apdone_blk);

    regslice_both_output_stream_V_data_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TDATA_int_regslice,
        vld_in => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID,
        ack_in => output_stream_TREADY_int_regslice,
        data_out => output_stream_TDATA,
        vld_out => regslice_both_output_stream_V_data_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_data_V_U_apdone_blk);

    regslice_both_output_stream_V_keep_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TKEEP_int_regslice,
        vld_in => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID,
        ack_in => regslice_both_output_stream_V_keep_V_U_ack_in_dummy,
        data_out => output_stream_TKEEP,
        vld_out => regslice_both_output_stream_V_keep_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_keep_V_U_apdone_blk);

    regslice_both_output_stream_V_strb_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TSTRB_int_regslice,
        vld_in => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID,
        ack_in => regslice_both_output_stream_V_strb_V_U_ack_in_dummy,
        data_out => output_stream_TSTRB,
        vld_out => regslice_both_output_stream_V_strb_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_strb_V_U_apdone_blk);

    regslice_both_output_stream_V_last_V_U : component grayscale_kernel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TLAST_int_regslice,
        vld_in => grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID,
        ack_in => regslice_both_output_stream_V_last_V_U_ack_in_dummy,
        data_out => output_stream_TLAST,
        vld_out => regslice_both_output_stream_V_last_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state5) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_ready = ap_const_logic_1)) then 
                    grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    height_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    width_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) and (height_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (height_0_vld_reg = ap_const_logic_1)) or (not(((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_const_logic_1) and (height_0_vld_reg = ap_const_logic_0)))) then
                height_0_data_reg <= height;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                height_read_reg_158 <= height_0_data_reg;
                smax1_reg_174 <= smax1_fu_132_p3;
                smax_reg_169 <= smax_fu_118_p3;
                width_read_reg_163 <= width_0_data_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                mul_ln12_reg_199 <= grp_fu_100_p2;
                sub22_reg_194 <= sub22_fu_153_p2;
                sub_reg_189 <= sub_fu_148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID = ap_const_logic_1))) then
                output_stream_TDATA_reg <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TDATA;
                output_stream_TKEEP_reg <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TKEEP;
                output_stream_TLAST_reg <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TLAST;
                output_stream_TSTRB_reg <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) and (width_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (width_0_vld_reg = ap_const_logic_1)) or (not(((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_const_logic_1) and (width_0_vld_reg = ap_const_logic_0)))) then
                width_0_data_reg <= width;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_done, ap_CS_fsm_state6, ap_CS_fsm_state7, regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_NS_fsm_state5 <= ap_NS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_done)
    begin
        if ((grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state7, regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    empty_17_fu_126_p2 <= "1" when (signed(width_0_data_reg) > signed(ap_const_lv32_0)) else "0";
    empty_fu_112_p2 <= "1" when (signed(height_0_data_reg) > signed(ap_const_lv32_0)) else "0";
    grp_fu_100_p0 <= grp_fu_100_p00(31 - 1 downto 0);
    grp_fu_100_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax_reg_169),62));
    grp_fu_100_p1 <= grp_fu_100_p10(31 - 1 downto 0);
    grp_fu_100_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax1_reg_174),62));
    grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_ap_start_reg;
    grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TREADY <= (output_stream_TREADY_int_regslice and ap_CS_fsm_state6);

    height_0_ack_out_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state7, regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            height_0_ack_out <= ap_const_logic_1;
        else 
            height_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    input_stream_TREADY <= regslice_both_input_stream_V_data_V_U_ack_in;

    input_stream_TREADY_int_regslice_assign_proc : process(grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_input_stream_TREADY, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_stream_TREADY_int_regslice <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_input_stream_TREADY;
        else 
            input_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    output_stream_TDATA_int_regslice_assign_proc : process(grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TDATA, grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID, ap_CS_fsm_state6, output_stream_TDATA_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TDATA_int_regslice <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TDATA;
        else 
            output_stream_TDATA_int_regslice <= output_stream_TDATA_reg;
        end if; 
    end process;


    output_stream_TKEEP_int_regslice_assign_proc : process(grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID, grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TKEEP, ap_CS_fsm_state6, output_stream_TKEEP_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TKEEP_int_regslice <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TKEEP;
        else 
            output_stream_TKEEP_int_regslice <= output_stream_TKEEP_reg;
        end if; 
    end process;


    output_stream_TLAST_int_regslice_assign_proc : process(grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID, grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TLAST, ap_CS_fsm_state6, output_stream_TLAST_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TLAST_int_regslice <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TLAST;
        else 
            output_stream_TLAST_int_regslice <= output_stream_TLAST_reg;
        end if; 
    end process;


    output_stream_TSTRB_int_regslice_assign_proc : process(grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID, grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TSTRB, ap_CS_fsm_state6, output_stream_TSTRB_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TSTRB_int_regslice <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TSTRB;
        else 
            output_stream_TSTRB_int_regslice <= output_stream_TSTRB_reg;
        end if; 
    end process;

    output_stream_TVALID <= regslice_both_output_stream_V_data_V_U_vld_out;
    output_stream_TVALID_int_regslice <= grp_grayscale_kernel_Pipeline_VITIS_LOOP_38_1_VITIS_LOOP_39_2_fu_76_output_stream_TVALID;
    smax1_fu_132_p3 <= 
        trunc_ln12_fu_104_p1 when (empty_17_fu_126_p2(0) = '1') else 
        ap_const_lv31_0;
    smax_fu_118_p3 <= 
        trunc_ln12_1_fu_108_p1 when (empty_fu_112_p2(0) = '1') else 
        ap_const_lv31_0;
    sub22_fu_153_p2 <= std_logic_vector(unsigned(width_read_reg_163) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_fu_148_p2 <= std_logic_vector(unsigned(height_read_reg_158) + unsigned(ap_const_lv32_FFFFFFFF));
    trunc_ln12_1_fu_108_p1 <= height_0_data_reg(31 - 1 downto 0);
    trunc_ln12_fu_104_p1 <= width_0_data_reg(31 - 1 downto 0);

    width_0_ack_out_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state7, regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            width_0_ack_out <= ap_const_logic_1;
        else 
            width_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

end behav;
